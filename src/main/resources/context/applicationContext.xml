<!--

    Copyright (C) 2017 GIP RECIA http://www.recia.fr
    @Author (C) 2013 Maxime Bossard <mxbossard@gmail.com>
    @Author (C) 2016 Julien Gribonvald <julien.gribonvald@recia.fr>

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
    xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

    <context:annotation-config />

    <!-- | APP CONFIGURATION + -->

    <bean id="userInfoService" class="org.esco.portlet.changeetab.service.impl.BasicUserInfoService">
        <property name="currentEtabCodeInfoKey" value="${userInfo.key.currentEtabId}" />
        <property name="etabCodesInfoKey" value="${userInfo.key.structCodes}" />
        <property name="currentStructIdInfoKey" value="${userInfo.key.currentStructId}" />
        <property name="structIdsInfoKey" value="${userInfo.key.structIds}" />
    </bean>

    <bean id="structureService" class="org.esco.portlet.changeetab.service.impl.CachingStructureService">
        <property name="cachingDuration" value="3600000" /> <!-- in millis -->
        <property name="structureCache" ref="structuresCache" />
        <property name="etabsCodeIdCache" ref="etabsCodeIdCache" />
        <property name="structureDao" ref="structureDao" />
    </bean>

    <bean id="userService" class="org.esco.portlet.changeetab.service.impl.BasicUserService">
        <property name="userDao" ref="userDao" />
    </bean>

    <!-- LDAP DAO -->
    <bean id="structLdapTemplate" class="org.springframework.ldap.core.LdapTemplate">
        <property name="contextSource">
            <bean class="org.springframework.ldap.core.support.LdapContextSource">
                <property name="url" value="${ldap.read.connect.url}" />
                <property name="userDn" value="${ldap.read.connect.userDn}" />
                <property name="password" value="${ldap.read.connect.password}" />
            </bean>
        </property>
    </bean>

    <bean id="userLdapTemplate" class="org.springframework.ldap.core.LdapTemplate">
        <property name="contextSource">
            <bean class="org.springframework.ldap.core.support.LdapContextSource">
                <property name="url" value="${ldap.write.connect.url}" />
                <property name="userDn" value="${ldap.write.connect.userDn}" />
                <property name="password" value="${ldap.write.connect.password}" />
            </bean>
        </property>
    </bean>

    <bean id="structureDao" class="org.esco.portlet.changeetab.dao.impl.LdapStructureDao">
        <property name="ldapTemplate" ref="structLdapTemplate" />
        <property name="structureBase" value="${ldap.read.structureBaseDn}" />
        <property name="allStructFilter" value="${ldap.read.filter.allStructures}" />
        <property name="structIdLdapAttr" value="${ldap.read.attribute.structureId}" />
        <property name="etabcodeLdapAttr" value="${ldap.read.attribute.structureCode}" />
        <property name="structNameLdapAttr" value="${ldap.read.attribute.structureName}" />
        <property name="structDisplayNameLdapAttr" value="${ldap.read.attribute.structureDisplayName}" />
        <property name="structDescriptionLdapAttr" value="${ldap.read.attribute.structureDescription}" />
        <property name="classValueStructUAI">
            <bean class="org.springframework.util.StringUtils" factory-method="commaDelimitedListToSet">
                <constructor-arg type="java.lang.String">
                    <bean class="org.springframework.util.StringUtils" factory-method="trimAllWhitespace">
                        <constructor-arg type="java.lang.String" value="${ldap.read.attribute.structureObjectClassWithUAI}" />
                    </bean>
                </constructor-arg>
            </bean>
        </property>
        <property name="otherAttributes">
        <bean class="org.springframework.util.StringUtils" factory-method="commaDelimitedListToSet">
                <constructor-arg type="java.lang.String">
                    <bean class="org.springframework.util.StringUtils" factory-method="trimAllWhitespace">
                        <constructor-arg type="java.lang.String" value="${ldap.read.attribute.structureOthers}" />
                    </bean>
                </constructor-arg>
            </bean>
        </property>
        <property name="structureFormatters">
            <list>
                <!-- Pour les lycées et CLG remplacement du premier - par un espace (afin d'avoir "CLG MONTRESOR") et supression de la chaîne -ac-ORL._TOURS -->
                <bean class="org.esco.portlet.changeetab.dao.bean.LdapStructureDisplayNameFormater">
                    <property name="groupsRegex" value="[^-]*(-).*(-ac-ORL._TOURS)" />
                    <property name="indexListReplacement">
                        <util:map>
                            <entry key="1" value=" " />
                            <entry key="2" value="" />
                        </util:map>
                    </property>
                </bean>
                <bean class="org.esco.portlet.changeetab.dao.bean.LdapStructureDisplayNameFormater">
                    <property name="groupsRegex" value="^CLG(\$).*(\$.*)" />
                    <property name="indexListReplacement">
                        <util:map>
                            <entry key="1" value=" " />
                            <entry key="2" value="" />
                        </util:map>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="userDao" class="org.esco.portlet.changeetab.dao.impl.LdapUserDao">
        <property name="ldapTemplate" ref="userLdapTemplate" />
        <property name="currentStructIdLdapKey" value="${ldap.write.attribute.currentStructId}" />
        <property name="currentEtabCodeLdapKey" value="${ldap.write.attribute.currentStructCode}" />
        <property name="userDn" value="${ldap.write.peopleDn}" />
        <property name="userIdTemplate" value="${peopleDn.templateId}" />
    </bean>

    <!-- Mocked DAO -->
    <!--
    <bean id="etablissementDao" class="org.esco.portlet.changeetab.dao.impl.MockEtablissementDao" />

    <bean id="iserDao" class="org.esco.portlet.changeetab.dao.impl.MockUserDao">
        <property name="currentEtabIdLdapKey" value="${ldap.write.attribute.currentEtabId}" />
        <property name="userDn" value="${ldap.write.peopleDn}" />
        <property name="userIdTemplate" value="${peopleDn.templateId}" />
    </bean>
     -->

    <!-- EHCache Configuration -->
    <bean id="cacheManager"
        class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:cacheManagerName="ChangeEtab.cacheManager" p:shared="true">
        <property name="configLocation">
            <value>classpath:ehcache.xml</value>
        </property>
    </bean>

    <!-- Structure cache -->
    <bean id="structuresCache" class="org.springframework.cache.ehcache.EhCacheCache">
        <constructor-arg>
            <bean class="org.springframework.cache.ehcache.EhCacheFactoryBean"
                p:cacheManager-ref="cacheManager" p:cacheName="structuresCache"/>
        </constructor-arg>
    </bean>
    <bean id="etabsCodeIdCache" class="org.springframework.cache.ehcache.EhCacheCache">
        <constructor-arg>
            <bean class="org.springframework.cache.ehcache.EhCacheFactoryBean"
                p:cacheManager-ref="cacheManager" p:cacheName="etabsCodeIdCache"/>
        </constructor-arg>
    </bean>

    <!-- | GENERAL PORTLET CONFIGURATION + -->

    <!-- Properties configuration -->
    <!--
    | Supports encrypted properties within the location(s) listed in this
    | bean.  The password is the environment variable "UP_JASYPT_KEY"
    | (see http://www.jasypt.org/).
    +-->
    <bean id="propertyConfigurer" class="org.springframework.context.support.PortalPropertySourcesPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:configuration.properties</value>
                <!--
                 | The following optional files allow deployers to set or override most
                 | configuration settings in a manner that is outside the footprint of the
                 | build/deploy cycle and SCM.
                 |
                 | Reasons for choosing that may include:
                 |   - Desire to keep sensitive information out of your Git repository
                 |   - Ability to change some common settings without a full build and deploy cycle
                 |   - Building a WAR/EAR that is environment-independent
                 |
                 | Any property defined in the above files that is referenced in the Spring context
                 | may be overridden in one (or both) of these files.  Later files override earlier
                 | files.
                 |
                 | The conventional location of ${portal.home} is ${catalina.base}/portal;  but you
                 | can (typically) override that location using a PORTAL_HOME environment variable.
                 | (Ultimately it depends on your setenv.sh or setenv.bat file.)
                 |
                 | The first file (global.properties) may contain properties that are shared with
                 | other modules (e.g. portlets) in Tomcat.  Several Apereo portlets source
                 | global.properties automatically.  The second file (simple-cms.properties) is
                 | (should be) sourced by this module exclusively.
                 +-->
                <value>file:${portal.home}/global.properties</value>
                <value>file:${portal.home}/change-etablissement-portlet.properties</value>
            </list>
        </property>
    </bean>

    <bean id="propertyResolver" factory-bean="propertyConfigurer" factory-method="getPropertyResolver"/>

    <!-- Message source for this context, loaded from localized "messages_xx"
        files -->
    <bean id="messageSource"
        class="org.springframework.context.support.ResourceBundleMessageSource"
        p:basenames="i18n/messages" p:useCodeAsDefaultMessage="true" />

    <!-- Abstract Default Exception Handler Bean -->
    <bean id="defaultExceptionHandlerTemplate"
          class="org.springframework.web.portlet.handler.SimpleMappingExceptionResolver"
          abstract="true">
        <property name="defaultErrorView" value="defError" />
        <property name="exceptionMappings">
            <props>
                <prop key="javax.portlet.PortletSecurityException">notAuthorized</prop>
                <prop key="javax.portlet.UnavailableException">notAvailable</prop>
            </props>
        </property>
    </bean>

</beans>